[Hardware] EXPLIQUE PORQUE LAS PRINCIPALES DESVENTAJAS DE LA ARQUITECTURA UNICICLO
Fundamental:
Debido a la naturaleza de esta arquitectura, el procesador uniciclo tiene un ciclo de reloj largo (en comparación con otras arq), el cual deriva del tiempo de ejecución de la instrucción más lenta del repertorio, sacrificando tiempo de ejecución por instrucción. Sumado a esto, este procesador solo podrá ejecutar una instrucción por ciclo de reloj.

A causa de esto, el procesador tendrá tiempos en los que estará ocioso por lo tanto la productividad conseguida (trabajo por unidad de tiempo) no será el mejor, mucho menos optimo.

Otras características derivadas y comparaciones:
- No se pueden reutilizar unidades funcionales. Si comparamos este punto con un procesador multiciclo, por ejemplo, vemos que es una desventaja de la arquitectura.
- Si comparamos la arq. unicilo con una más compleja, por ejemplo, la segmentada, nos damos cuenta que el hecho de ejecutar una instrucción por vez afecta de manera severa la productividad, y vuelvo a hacer hincapié en ello porque teniendo en cuenta esta arquitectura de ejecución ‘paralela’ o concurrente, podemos tener una mejor noción acerca de la productividad del procesador uniciclo frente a otras. 
- Como hablamos en clase y como conclusión de todo esto, todos estos problemas se verían agravados en arquitecturas más complejas.

[Hardware] EXPLIQUE PORQUE LA UDC MULTICICLO MEJORA EL CPI RESPECTO DE UNICICLO Y QUE DESVENTAJA PLANTEA CON RESPECTO AL DATAPATH
En arquitectura multicilo se utilizan varios ciclos de reloj por instrucción, lo cual es diferente al uniciclo que solo utiliza uno por instrucción. Sin embargo, estos ciclos son mas cortos y permiten que las instrucciones que requieran menos unidades funcionales ocupen menos tiempo de procesamiento, lo cual se traduce a una arquitectura menos ociosa que uniciclo.

Por otro lado, el costo/beneficio es bajo debido a la complejidad que implica el diseño, ya que necesita más hardware (MUX’s, buses extra, registros adicionales con fines arquitectónicos que son inaccesibles al programador). Otra complicación relevante, la unidad de control ya no es una unidad combinacional, sino que es una máquina de estados finitos. Debido a todas estas desventajas la arquitectura multiciclo está en desuso.

[Software] TIENE DOS CLÚSTERES COMPUESTOS POR 16 NODOS DE 64 CORES C/U. 
DESCRIBA UN MODELO ADECUADO DE PROGRAMACIÓN CONCURRENTE QUE
EXPLOTE LA ARQUITECTURA AL MÁXIMO
Cuestiones relevantes para aprovechar el hardware paralelo mediante la programación según la lectura de la Bibliografía Estructura y Diseño de Computadores:
-	Planificación de tareas.
-	Equilibrio de la carga.
-	El tiempo de sincronización.
-	La sobrecarga de las comunicaciones entre agentes colaboradores.
-	Pequeñas partes del programa deben incluso paralelizarse si se quiere hacer un buen uso los cores.
-	Mantener el tamaño del problema fijo.
o	Relacionada como aceleración fuerte
o	Mejora el aprovechamiento de la paralelización
neutralizando los efectos de la ley de Amdahl.

[Hardware] QUE COMPLEJIDADES ITRODUCE LA DMA
Las complejidades que introduce el DMA es que se requiere un modulo adicional capaz de imitar al procesador, y de recibir el control del sistema cedido por el procesador. Deebe ser utilizado solo cuando el procesador no lo necesita, o deberá forzar al procesador a que suspenda temporalmente su funcionamiento. Cuando la transferencia finaliza, el DMA libera el bus y envia una señal de interrupcion al procesador informando el estado de la operación. El procesador asi, solo interviene al comienzo y al final de una transferencia. Los

DMA: son utiles para dispositivos de E/S con gran ancho de banda (ej: disco rígido), tienen mayor costo y complejidad.

[HARDWARE, S.O.] QUE COMPLEJIDADES INTRODUCE INTERRUPCIONES
Segun la bibliografía, es una de las cuestiones más difíciles de abordar a la hora de diseñar un procesador.

Inicialmente procesaban sucesos inesperados como el desbordamiento aritmético, pero luego fueron extendidas para la comunicación de dispositivos de E/S.

Algunas de estas dificultades:
-	Requieren atención tanto a nivel de instrucción como en cuestiones de E/S.
-	Implican consideración a la hora de diseñar la unidad de control del procesador, de lo contrario, sería un problema implementarlas en un futuro. De igual manera, afectan a la duración del ciclo de reloj.
-	Tranquilamente puede requerir añadir registros extra (causa, EPC) y algunas señales de control a la implementación básica, extendiendo el control.
-	Existe una variedad muy amplia de ellas.
-	Sería sensato incluir una manera para habilitar/deshabilitar las excepciones, ya que pueden existir intervalos de tiempo donde nos interese ignorarlas.
-	Salvar el estado del proceso en ejecución cuando se maneja una excepción. De esa manera, por ejemplo, luego de procesarla el computador podría continuar la ejecución del proceso que origino la causa del problema.
-	Seria sensato implementar niveles de prioridad que determinen el orden en el cual se ejecutan.
Como se maneja una excepción en MIPS:
-	Se guarda la dir. de instrucción problemática en el contador de programa de excepción (EPC).
-	Transferir el control al S.O.
-	A través del registro causa se informa al S.O.
-	Finalmente, opta por la solución correspondiente.

[Memoria] EXPLIQUE QUE ES LA TLB Y COMO IMPACTA EN EL RENDIMIENTO DEL SISTEMA
En términos de memoria virtual tenemos las tablas de página con el fin de poder realizar las traducciones de direcciones virtuales a direcciones físicas en un determinado proceso. 

La TLB entonces es una cache especial, que almacena las traducciones mas recientes con el fin de ahorrar al sistema de memoria tener que recurrir a operaciones costosas frecuentemente tales como ir a buscar traducciones innecesarias todo el tiempo a memoria. 

La TLB hace mas eficiente el hecho de tener memoria virtual en el computador y eventualmente la performance del sistema.

[Memoria] COMPARE LAS CACHES ASOCIATIVAS, POR CORRESPONDENCIA DIRECTA Y ASOCIATIVAS POR VÍAS
Primero me parece conveniente comprar asociativas frente a correspondencia directa, ya que ambas se podrían ver como vectores donde cada posición de estas memorias puede contener un elemento (bloque) y acceder a cualquiera de estos elementos cueste el mismo trabajo por ser memorias de acceso aleatorio. 
-	Forma de asignar una posición de cache a memoria principal.
o	Directa, a cada bloque de MP le corresponde una única línea en cache.
o	Asociativa, cualquier bloque en MP puede estar en cualquier línea de la cache.
-	Etiqueta, las memorias de correspondencia directa almacenan una etiqueta en cada línea.
-	Circuitería, con mayor requerimiento en las asociativas, esto es debido a que la comparación para averiguar si un dato esta en memoria es mucho más complejo.
-	Costo, las memorias asociativas son más costosas.
-	Tasa de fallo menor en asociativas.
-	Las asociativas son memorias de menor tamaño.

Por último, una solución por compromiso entre ambas caches es la memoria cache asociativa por conjuntos, que agrupa varios conjuntos de líneas en cache. Es decir, un bloque de memoria principal puede estar en un solo conjunto de la memoria cache, pero dentro de este conjunto podría estar en cualquier línea de ese conjunto.
-	Mayor tasa de fallos que una completamente asociativa, pero menos a una de correspondencia directa.
-	Son interesantes bajo el punto de vista de la implementación de algoritmos de reemplazo.

[Memoria] DE QUE DEPENDE LA TASA DE FALLOS Y LA PENALIZACION
Los fallos en el sistema de memoria están relacionados a la capacidad de aciertos o accesos exitosos a datos requeridos por el procesador. Como lo hablamos a lo largo de la materia, el aprovechamiento de proximidad referencial, principio de localidad y espacial, son los determinantes para reducir la tasa e incrementar la performance del sistema. Otros aspectos que participan en la reducción:
-	Tipo de memoria cache, las memorias caches de tipo asociativa son las que tienen menos tasa de fallo.
-	Utilización de soluciones de compromiso tales como memorias cache asociativas.
-	Tamaño de bloque.
-	Fallos de escritura, se pueden mejorar las prestaciones mediante la escritura retardada o aplazada.
-	TLB reduce la tasa de fallo en términos de memoria virtual, ayudando a que el sistema operativo pueda gestionar las traducciones y eso sea de manera más eficiente.

Penalización
La penalización por fallo es el tiempo necesario para reemplazar un bloque en el nivel superior por el correspondiente bloque del nivel inferior, al que hay que añadir el tiempo que se tarda en suministrar este bloque al procesador. El tamaño de bloque también es relevante en este aspecto, ya que a mayor bloque más grande la penalización.

[Memoria] ¿CUÁL ES EL PAPEL DEL S.O. EN MEMORIA VIRTUAL?
Como discutimos en clases, el uso de memoria virtual tiene una fuerte conexión con el sistema operativo, solo aquellos computadores que dispongan de este tipo de software son los apropiados para dar soporte a la M.V. Algunas cuestiones y deberes que juega el S.O son:
-	Realizar las traducciones a partir de ubicar el número de página requerido en una tabla de página y armar la dirección de memoria final junto con los bits del desplazamiento.
-	Conocer el registro base de la página.
-	En caso de que una traducción produzca un fallo de página por no encontrarse en memoria, entonces el S.O se encarga de llevar a cabo la correspondiente interrupción.
-	Realizar el emplazamiento de página. 
-	Puede realizar un seguimiento sofisticado de la utilización de las páginas.
-	Es quien accede y conoce al área de swap.

[Memoria] Explique la politica de sustitucion de bloques en las caches de correspondencia directa y en asociativa
La política de sustitucion de bloques en caché de correspondencia directa implica un bajo nivel de circuitería ya que en relacion con la
memoria principal, a un elemento específico de la memoria principal le corresponde una única posición de la memoria caché. La
sustitución de ese elemento sería muy sencillo porque se tendría que buscar una única posición. Matemáticamente, se habla del
módulo: caché con 10 posiciones y una memoria principal con 100 elementos, al elemento 0 de la memoria principal le corresponde la
posición 0 de la caché, como también el elemento 10.
En cachés asociativas: requieren de circuiteria muy compleja ya que deben analizar en paralelo todas las etiquetas.
Las politicas de sustituciones pueden ser:
- Aleatorias
- FIFO: first in, first out
- MRU